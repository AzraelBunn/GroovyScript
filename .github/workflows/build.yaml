# This workflow must be manually triggered. It accepts a version and a release type.
# First it sets the version in gradle.properties to the new version and pushes it.
# Then it generates a log, based on commits.
# After that builds a jar and uploads it to curseforge/modrinth/GitHub releases

name: Publish mod version

on:
  workflow_dispatch:
    inputs:
      tag_version:
        description: 'Mod version'
        required: true
      release_type:
        description: 'Release type (release, beta, alpha)'
        default: 'beta'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Check if tag already exists
        run: |
          if git rev-parse --verify --quiet "v${{ github.event.inputs.version }}"; then
            echo "Version ${{ github.event.inputs.version }} already exists, aborting workflow."
            exit 1
          fi
        env:

      - name: Set version
        run: sed -i "s/mod_version=.*/mod_version=${{ github.event.inputs.version }}/g" gradle.properties

      - name: Commit and push gradle.properties
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "Bump version to ${{ github.event.inputs.version }}"
          commit_options: "--no-verify"
          file_pattern: gradle.properties
          tagging_message: "v${{ github.event.inputs.version }}"

      - name: Generate Changelog
        run: |
          echo "### Changelog ${{ github.event.inputs.version }}-${{ github.event.inputs.release-type }}" > CHANGELOG.md
          if git describe --tags --abbrev=0 > /dev/null 2>&1; then
            latest_tag=$(git describe --tags --abbrev=0)
            previous_tag=$(git describe --tags --abbrev=0 ${latest_tag}^)
            changelog=$(git log --pretty=format:'- %s' --oneline --decorate --decorate-refs=0 ${previous_tag}..${latest_tag})
            echo "${changelog}" >> CHANGELOG.md
          else
            echo "- No tags found" >> CHANGELOG.md
          fi

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build

      - name: Publish Minecraft Mods
        uses: Kir-Antipov/mc-publish@v3.2
        with:
          curseforge-id: 687577
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}

          github-tag: "v${{ steps.tag_version.outputs.version }}"
          github-generate-changelog: true
          github-draft: false
          github-prerelease: false
          github-token: ${{ secrets.GITHUB_TOKEN }}

          files-primary: build/libs/!(*-@(dev|sources|javadoc)).jar
          files-secondary: build/libs/*-@(dev|sources|javadoc).jar
          name: GroovyScript-${{ github.event.inputs.tag_version }}
          version: ${{ github.event.inputs.tag_version }}
          version-type: ${{ github.event.inputs.release_type }}
          changelog-file: CHANGELOG.md
          loaders: |
            forge
          game-versions: |
            1.12.2
          dependencies: |
            mekanism | recommends | *
            blood-magic | recommends | *
            thermal-expansion | recommends | *
            draconic-evolution | recommends | *
            ender-io | recommends | *
            industrial-craft | recommends | *
            ic2-classic | recommends | *
            astral-sorcery | recommends | *
            thaumcraft | recommends | *
            immersive-engineering | recommends | *
            tinkers-construct | recommends | *
            tinkers-complement | recommends | *
            constructs-armory | recommends | *
          java: |
            8
          retry-attempts: 2